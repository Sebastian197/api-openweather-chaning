var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiService.html",[0,0.755,1,1.029]],["body/classes/ApiService.html",[0,0.524,1,1.344,2,0.818,3,0.818,4,0.818,5,0.585,6,0.585,7,1.908,8,1.734,9,1.745,10,1.633,11,2.039,12,2.138,13,1.598,14,0.124,15,1.355,16,1.908,17,0.714,18,0.969,19,1.908,20,1.697,21,0.969,22,1.908,23,1.722,24,0.969,25,1.823,26,1.355,27,1.722,28,1.355,29,1.442,30,0.969,31,0.969,32,0.969,33,0.969,34,0.969,35,0.431,36,1.355,37,3.453,38,1.734,39,1.734,40,2.853,41,1.734,42,3.097,43,2.551,44,1.734,45,1.734,46,2.551,47,2.017,48,1.355,49,2.554,50,2.853,51,1.355,52,2.138,53,1.355,54,1.782,55,2.551,56,1.504,57,0.78,58,0.818,59,0.969,60,1.24,61,1.633,62,2.417,63,2.409,64,2.017,65,2.409,66,1.722,67,1.722,68,0.818,69,1.722,70,1.722,71,0.818,72,2.99,73,2.409,74,2.092,75,2.017,76,0.818,77,0.714,78,1.908,79,1.355,80,2.235,81,2.235,82,0.818,83,0.818,84,1.734,85,0.969,86,1.355,87,1.722,88,1.355,89,1.442,90,2.409,91,0.969,92,2.017,93,1.355,94,3.182,95,1.908,96,2.668,97,0.818,98,1.722,99,1.823,100,1.722,101,1.722,102,0.969,103,2.235,104,1.355,105,2.138,106,1.442,107,1.442,108,1.722,109,0.818,110,0.969,111,1.442,112,2.668,113,2.017,114,2.017,115,0.818,116,1.442,117,1.734,118,2.017,119,2.017,120,0.969,121,0.714,122,1.355,123,1.355,124,0.818,125,0.431,126,0.818,127,0.818,128,0.969,129,0.818,130,0.818,131,0.818,132,0.818,133,0.585,134,0.818,135,0.818,136,0.818,137,2.409,138,3.142,139,1.355,140,0.818,141,0.818,142,0.818,143,1.355,144,0.818,145,0.818,146,0.818,147,0.431,148,1.355,149,0.818,150,0.818,151,0.818,152,0.818,153,2.668,154,2.017,155,2.668,156,1.734,157,0.818,158,0.818,159,2.235,160,1.734,161,0.818,162,0.818,163,0.818,164,0.818,165,0.818,166,0.818,167,1.355,168,0.818,169,0.818,170,0.818,171,0.585,172,0.818,173,0.818,174,0.818,175,0.818,176,0.818,177,0.818,178,0.818,179,0.818,180,1.355,181,0.026,182,0.043,183,0.026]],["title/coverage.html",[184,1.866]],["body/coverage.html",[0,1.079,1,1.471,5,1.995,6,1.995,14,0.116,17,1.471,57,1.079,121,1.471,125,1.471,181,0.089,182,0.104,183,0.089,184,1.995,185,1.995,186,2.79,187,2.79,188,1.995,189,3.267,190,3.267,191,3.267,192,1.995,193,1.995,194,2.79,195,2.79,196,2.79,197,2.79]],["title/dependencies.html",[198,1.656,199,1.667]],["body/dependencies.html",[14,0.113,120,2.114,181,0.094,182,0.108,183,0.094,199,2.114,200,2.957]],["title/index.html",[35,0.873,201,1.184,202,1.184]],["body/index.html",[7,1.704,9,1.566,10,1.364,11,1.505,12,2.422,13,2.314,14,0.123,16,2.314,17,1.447,18,1.962,19,2.183,20,1.73,21,1.221,22,1.962,23,1.505,24,1.221,25,1.704,27,1.704,29,1.221,30,1.704,31,1.704,32,1.505,33,1.505,34,1.505,54,1.786,56,0.9,57,0.422,59,1.704,60,1.221,61,0.9,62,2.123,67,0.779,74,1.505,77,1.256,85,0.779,87,1.221,89,0.779,91,0.779,95,0.779,98,2.183,99,2.234,100,2.051,101,1.962,102,1.221,105,1.85,106,1.221,107,1.221,108,1.221,110,1.221,111,1.505,116,1.221,128,1.221,133,1.221,147,0.574,181,0.035,182,0.054,183,0.035,203,1.09,204,1.09,205,2.105,206,1.708,207,1.09,208,1.09,209,1.09,210,1.09,211,1.09,212,1.09,213,1.09,214,2.105,215,1.09,216,1.708,217,1.09,218,1.09,219,1.09,220,1.09,221,1.09,222,1.221,223,0.779,224,1.09,225,1.09,226,1.09,227,1.09,228,1.708,229,2.105,230,1.09,231,1.09,232,1.09,233,1.09,234,1.09,235,1.09,236,1.09,237,1.09,238,1.09,239,1.708,240,1.09,241,1.09,242,1.09,243,1.09,244,1.09,245,1.09,246,1.09,247,1.09,248,1.09,249,1.708,250,1.09,251,1.708,252,1.09,253,1.09,254,1.09,255,1.09,256,1.09,257,1.09,258,2.745,259,2.745,260,2.745,261,1.708,262,1.708,263,1.708,264,1.09,265,1.09,266,2.383,267,2.869,268,2.105,269,2.97,270,3.184,271,1.09,272,1.09,273,2.383,274,1.708,275,1.09,276,1.09,277,2.383,278,1.09,279,2.383,280,1.09,281,2.383,282,1.09,283,2.383,284,1.09,285,2.383,286,1.09,287,2.383,288,1.09,289,2.383,290,2.383,291,2.383,292,2.383,293,1.09,294,2.383,295,1.09,296,1.708,297,2.383,298,1.09,299,2.383,300,1.09,301,1.708,302,1.708,303,1.09,304,1.708,305,1.09,306,1.708,307,1.708,308,1.708,309,1.708,310,1.708,311,1.708,312,1.708,313,1.09,314,1.09,315,1.09,316,1.09,317,1.09,318,1.09,319,1.09,320,1.09,321,1.09,322,1.09,323,1.09,324,2.383,325,1.09,326,1.09,327,1.708,328,1.09,329,1.09,330,2.383,331,2.105,332,2.105,333,1.708,334,1.09,335,2.105,336,1.09,337,1.708,338,1.09,339,1.09,340,1.09,341,2.105,342,2.105,343,1.708,344,2.105,345,1.505,346,2.105,347,2.105,348,1.09,349,1.09,350,1.708,351,1.09,352,1.09,353,1.708,354,1.09,355,1.09,356,1.09,357,1.09,358,1.09,359,1.09,360,1.09,361,1.09,362,1.09,363,1.09,364,1.708,365,1.09,366,1.09,367,1.09,368,1.09,369,1.09,370,1.09,371,1.09,372,1.09,373,1.09,374,1.09,375,1.09,376,1.09,377,1.09,378,1.09,379,1.09,380,1.09,381,1.09,382,1.09,383,1.708,384,1.09,385,1.09,386,1.09,387,0.574,388,0.779]],["title/license.html",[201,1.184,202,1.184,387,0.873]],["body/license.html",[14,0.096,181,0.077,182,0.096,183,0.077,185,1.734,345,1.734,387,1.278,388,1.734,389,3.262,390,2.425,391,2.425,392,3.003,393,2.425,394,2.425,395,2.425,396,2.425,397,2.425,398,2.425,399,3.003,400,3.686,401,2.425,402,2.425,403,2.425,404,3.262,405,2.425,406,3.003,407,2.425,408,2.425,409,3.003,410,2.425,411,2.425,412,2.425,413,2.425,414,2.425,415,2.425,416,2.425,417,3.003,418,2.425,419,2.425,420,2.425,421,2.425,422,2.425,423,2.425,424,2.425,425,3.003,426,3.003,427,2.425,428,2.425,429,2.425,430,2.425,431,2.425,432,2.425,433,2.425,434,2.425,435,2.425,436,2.425,437,2.425,438,2.425,439,2.425,440,2.425,441,2.425,442,2.425,443,2.425,444,2.425,445,2.425,446,2.425,447,2.425,448,2.425,449,2.425,450,2.425,451,2.425,452,2.425,453,2.425,454,2.425,455,2.425,456,2.425,457,2.425]],["title/modules.html",[458,1.866]],["body/modules.html",[14,0.108,181,0.095,182,0.108,183,0.095,458,2.13]],["title/overview.html",[459,1.866]],["body/overview.html",[0,1.147,14,0.108,147,1.562,181,0.095,182,0.108,183,0.095,459,2.119]],["title/miscellaneous/variables.html",[460,1.184,461,1.667]],["body/miscellaneous/variables.html",[9,1.324,10,0.971,14,0.124,20,0.971,35,0.971,49,1.317,52,1.317,54,0.971,56,2.008,57,0.971,61,0.971,66,1.317,69,1.795,70,1.795,77,0.971,78,2.042,121,1.324,125,1.324,171,1.317,181,0.059,182,0.08,183,0.059,188,1.317,192,1.317,193,1.795,222,1.795,223,1.317,460,1.317,461,1.317,462,1.842,463,1.842,464,2.511,465,1.842,466,3.81,467,1.842,468,1.842,469,1.842,470,1.842,471,1.842,472,1.842,473,1.842,474,1.842,475,1.842,476,1.842,477,1.842,478,1.842,479,1.842,480,1.842,481,1.842,482,1.842,483,1.842,484,1.842,485,1.842,486,1.842,487,1.842,488,1.842,489,1.842,490,1.842,491,1.842,492,1.842,493,1.842,494,1.842,495,1.842,496,1.842,497,1.842,498,1.842,499,1.842,500,1.842,501,1.842,502,1.842,503,1.842,504,1.842,505,1.842,506,1.842,507,1.842,508,1.842,509,1.842,510,1.842,511,1.842,512,1.842,513,1.842,514,1.842,515,1.842,516,1.842,517,1.842,518,1.842,519,1.842,520,1.842,521,1.842,522,2.511,523,1.842,524,1.842,525,1.842,526,1.842,527,1.842,528,1.842,529,1.842,530,1.842,531,1.842,532,1.842,533,1.842,534,1.842,535,1.842]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":324,"title":{},"body":{"index.html":{}}}],["0.1",{"_index":369,"title":{},"body":{"index.html":{}}}],["0.21.0",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["0.65",{"_index":355,"title":{},"body":{"index.html":{}}}],["03d",{"_index":274,"title":{},"body":{"index.html":{}}}],["03n",{"_index":370,"title":{},"body":{"index.html":{}}}],["04d",{"_index":358,"title":{},"body":{"index.html":{}}}],["06",{"_index":347,"title":{},"body":{"index.html":{}}}],["1",{"_index":147,"title":{},"body":{"classes/ApiService.html":{},"index.html":{},"overview.html":{}}}],["1.09",{"_index":336,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["10.39",{"_index":278,"title":{},"body":{"index.html":{}}}],["100",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":290,"title":{},"body":{"index.html":{}}}],["1002",{"_index":353,"title":{},"body":{"index.html":{}}}],["1003",{"_index":330,"title":{},"body":{"index.html":{}}}],["11.67",{"_index":284,"title":{},"body":{"index.html":{}}}],["12",{"_index":346,"title":{},"body":{"index.html":{}}}],["12:00:00",{"_index":348,"title":{},"body":{"index.html":{}}}],["150.6517943",{"_index":28,"title":{},"body":{"classes/ApiService.html":{}}}],["15:00:00",{"_index":362,"title":{},"body":{"index.html":{}}}],["1607151749",{"_index":303,"title":{},"body":{"index.html":{}}}],["1607173717",{"_index":298,"title":{},"body":{"index.html":{}}}],["1607185327",{"_index":305,"title":{},"body":{"index.html":{}}}],["1607238205",{"_index":381,"title":{},"body":{"index.html":{}}}],["1607256000",{"_index":326,"title":{},"body":{"index.html":{}}}],["1607266800",{"_index":349,"title":{},"body":{"index.html":{}}}],["1607271721",{"_index":382,"title":{},"body":{"index.html":{}}}],["1607277600",{"_index":363,"title":{},"body":{"index.html":{}}}],["1621537",{"_index":380,"title":{},"body":{"index.html":{}}}],["18:00:00",{"_index":375,"title":{},"body":{"index.html":{}}}],["2.159",{"_index":378,"title":{},"body":{"index.html":{}}}],["2.16",{"_index":264,"title":{},"body":{"index.html":{}}}],["2.951074",{"_index":107,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["200",{"_index":311,"title":{},"body":{"index.html":{}}}],["2020",{"_index":345,"title":{},"body":{"index.html":{},"license.html":{}}}],["277.43",{"_index":328,"title":{},"body":{"index.html":{}}}],["278.46",{"_index":365,"title":{},"body":{"index.html":{}}}],["278.5",{"_index":351,"title":{},"body":{"index.html":{}}}],["282.82",{"_index":327,"title":{},"body":{"index.html":{}}}],["283.32",{"_index":364,"title":{},"body":{"index.html":{}}}],["283.42",{"_index":366,"title":{},"body":{"index.html":{}}}],["283.91",{"_index":329,"title":{},"body":{"index.html":{}}}],["284.14",{"_index":350,"title":{},"body":{"index.html":{}}}],["284.79",{"_index":352,"title":{},"body":{"index.html":{}}}],["286",{"_index":361,"title":{},"body":{"index.html":{}}}],["291",{"_index":340,"title":{},"body":{"index.html":{}}}],["3",{"_index":317,"title":{},"body":{"index.html":{}}}],["305",{"_index":373,"title":{},"body":{"index.html":{}}}],["31",{"_index":338,"title":{},"body":{"index.html":{}}}],["3128760",{"_index":308,"title":{},"body":{"index.html":{}}}],["320",{"_index":295,"title":{},"body":{"index.html":{}}}],["33.8473567",{"_index":26,"title":{},"body":{"classes/ApiService.html":{}}}],["33.8473567&lon=150.651794",{"_index":163,"title":{},"body":{"classes/ApiService.html":{}}}],["3600",{"_index":307,"title":{},"body":{"index.html":{}}}],["4.6",{"_index":293,"title":{},"body":{"index.html":{}}}],["4.68",{"_index":372,"title":{},"body":{"index.html":{}}}],["40",{"_index":296,"title":{},"body":{"index.html":{}}}],["41.3888",{"_index":377,"title":{},"body":{"index.html":{}}}],["41.39",{"_index":265,"title":{},"body":{"index.html":{}}}],["43.2633534",{"_index":106,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["46",{"_index":371,"title":{},"body":{"index.html":{}}}],["5",{"_index":108,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["5.25",{"_index":280,"title":{},"body":{"index.html":{}}}],["5.49",{"_index":339,"title":{},"body":{"index.html":{}}}],["5.86",{"_index":360,"title":{},"body":{"index.html":{}}}],["50",{"_index":288,"title":{},"body":{"index.html":{}}}],["57",{"_index":354,"title":{},"body":{"index.html":{}}}],["59",{"_index":368,"title":{},"body":{"index.html":{}}}],["62",{"_index":334,"title":{},"body":{"index.html":{}}}],["6398",{"_index":300,"title":{},"body":{"index.html":{}}}],["64",{"_index":359,"title":{},"body":{"index.html":{}}}],["72",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["8.89",{"_index":282,"title":{},"body":{"index.html":{}}}],["8/11",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["802",{"_index":268,"title":{},"body":{"index.html":{}}}],["803",{"_index":356,"title":{},"body":{"index.html":{}}}],["996",{"_index":333,"title":{},"body":{"index.html":{}}}],["997",{"_index":367,"title":{},"body":{"index.html":{}}}],["999",{"_index":286,"title":{},"body":{"index.html":{}}}],["above",{"_index":424,"title":{},"body":{"license.html":{}}}],["access",{"_index":137,"title":{},"body":{"classes/ApiService.html":{}}}],["action",{"_index":450,"title":{},"body":{"license.html":{}}}],["actual",{"_index":100,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["and/or",{"_index":415,"title":{},"body":{"license.html":{}}}],["anticipation",{"_index":94,"title":{},"body":{"classes/ApiService.html":{}}}],["api",{"_index":16,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["api.searchbygeolocationgeographic",{"_index":24,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["api.searchbyname('barcelona",{"_index":21,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["api.searchzippostcode('08080",{"_index":29,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["api_key",{"_index":246,"title":{},"body":{"index.html":{}}}],["api_url",{"_index":247,"title":{},"body":{"index.html":{}}}],["apikey",{"_index":19,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["apiservice",{"_index":1,"title":{"classes/ApiService.html":{}},"body":{"classes/ApiService.html":{},"coverage.html":{}}}],["aqu",{"_index":216,"title":{},"body":{"index.html":{}}}],["ar",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arabic",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["archivo",{"_index":241,"title":{},"body":{"index.html":{}}}],["arising",{"_index":454,"title":{},"body":{"license.html":{}}}],["array",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":401,"title":{},"body":{"license.html":{}}}],["async",{"_index":167,"title":{},"body":{"classes/ApiService.html":{}}}],["authors",{"_index":443,"title":{},"body":{"license.html":{}}}],["autor",{"_index":383,"title":{},"body":{"index.html":{}}}],["await",{"_index":176,"title":{},"body":{"classes/ApiService.html":{}}}],["axios",{"_index":120,"title":{},"body":{"classes/ApiService.html":{},"dependencies.html":{}}}],["axios.get(url",{"_index":177,"title":{},"body":{"classes/ApiService.html":{}}}],["añadiendo",{"_index":320,"title":{},"body":{"index.html":{}}}],["añadirlo",{"_index":250,"title":{},"body":{"index.html":{}}}],["barcelona",{"_index":309,"title":{},"body":{"index.html":{}}}],["base",{"_index":275,"title":{},"body":{"index.html":{}}}],["bg",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":153,"title":{},"body":{"classes/ApiService.html":{}}}],["broken",{"_index":357,"title":{},"body":{"index.html":{}}}],["bulgarian",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["busca",{"_index":93,"title":{},"body":{"classes/ApiService.html":{}}}],["buscando",{"_index":110,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["buscar",{"_index":89,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["c",{"_index":390,"title":{},"body":{"license.html":{}}}],["ca",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cada",{"_index":316,"title":{},"body":{"index.html":{}}}],["catalan",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":179,"title":{},"body":{"classes/ApiService.html":{}}}],["catch(error",{"_index":259,"title":{},"body":{"index.html":{}}}],["chaning');import",{"_index":253,"title":{},"body":{"index.html":{}}}],["chaning';para",{"_index":255,"title":{},"body":{"index.html":{}}}],["chaninguso",{"_index":234,"title":{},"body":{"index.html":{}}}],["chano",{"_index":391,"title":{},"body":{"license.html":{}}}],["charge",{"_index":396,"title":{},"body":{"license.html":{}}}],["chinese",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city",{"_index":376,"title":{},"body":{"index.html":{}}}],["ciudad",{"_index":319,"title":{},"body":{"index.html":{}}}],["claim",{"_index":446,"title":{},"body":{"license.html":{}}}],["clase",{"_index":8,"title":{},"body":{"classes/ApiService.html":{}}}],["class",{"_index":0,"title":{"classes/ApiService.html":{}},"body":{"classes/ApiService.html":{},"coverage.html":{},"overview.html":{}}}],["classdesc",{"_index":130,"title":{},"body":{"classes/ApiService.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiService.html":{}}}],["clouds",{"_index":270,"title":{},"body":{"index.html":{}}}],["cnt",{"_index":325,"title":{},"body":{"index.html":{}}}],["cod",{"_index":310,"title":{},"body":{"index.html":{}}}],["codcountry",{"_index":112,"title":{},"body":{"classes/ApiService.html":{}}}],["code",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codes",{"_index":127,"title":{},"body":{"classes/ApiService.html":{}}}],["codes.ts",{"_index":193,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["comando",{"_index":230,"title":{},"body":{"index.html":{}}}],["como",{"_index":249,"title":{},"body":{"index.html":{}}}],["con",{"_index":85,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["conditions",{"_index":423,"title":{},"body":{"license.html":{}}}],["configlanguage",{"_index":38,"title":{},"body":{"classes/ApiService.html":{}}}],["configunits",{"_index":39,"title":{},"body":{"classes/ApiService.html":{}}}],["connection",{"_index":456,"title":{},"body":{"license.html":{}}}],["console.log(data",{"_index":23,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["console.log(e",{"_index":34,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["console.log(error",{"_index":260,"title":{},"body":{"index.html":{}}}],["const",{"_index":12,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["constantes",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants/constants",{"_index":124,"title":{},"body":{"classes/ApiService.html":{}}}],["constants/lang",{"_index":126,"title":{},"body":{"classes/ApiService.html":{}}}],["constructor",{"_index":47,"title":{},"body":{"classes/ApiService.html":{}}}],["constructor(apikey",{"_index":48,"title":{},"body":{"classes/ApiService.html":{}}}],["consumir",{"_index":132,"title":{},"body":{"classes/ApiService.html":{}}}],["contract",{"_index":451,"title":{},"body":{"license.html":{}}}],["coord",{"_index":128,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["coordenadas",{"_index":104,"title":{},"body":{"classes/ApiService.html":{}}}],["copiar",{"_index":225,"title":{},"body":{"index.html":{}}}],["copies",{"_index":417,"title":{},"body":{"license.html":{}}}],["copy",{"_index":399,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":389,"title":{},"body":{"license.html":{}}}],["country",{"_index":301,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":184,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":117,"title":{},"body":{"classes/ApiService.html":{}}}],["crear",{"_index":221,"title":{},"body":{"index.html":{}}}],["croatian",{"_index":486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":122,"title":{},"body":{"classes/ApiService.html":{}}}],["cz",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["czech",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["código",{"_index":61,"title":{},"body":{"classes/ApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":343,"title":{},"body":{"index.html":{}}}],["damages",{"_index":447,"title":{},"body":{"license.html":{}}}],["data",{"_index":32,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["datos",{"_index":67,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["de",{"_index":9,"title":{},"body":{"classes/ApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":403,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":457,"title":{},"body":{"license.html":{}}}],["debes",{"_index":212,"title":{},"body":{"index.html":{}}}],["dede",{"_index":215,"title":{},"body":{"index.html":{}}}],["default",{"_index":69,"title":{},"body":{"classes/ApiService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":256,"title":{},"body":{"index.html":{}}}],["defined",{"_index":50,"title":{},"body":{"classes/ApiService.html":{}}}],["deg",{"_index":294,"title":{},"body":{"index.html":{}}}],["del",{"_index":62,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["dependencies",{"_index":199,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["desea",{"_index":88,"title":{},"body":{"classes/ApiService.html":{}}}],["después",{"_index":224,"title":{},"body":{"index.html":{}}}],["diferentes",{"_index":208,"title":{},"body":{"index.html":{}}}],["dirigirse",{"_index":218,"title":{},"body":{"index.html":{}}}],["dispersas",{"_index":272,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":413,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":185,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["donde",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dt",{"_index":297,"title":{},"body":{"index.html":{}}}],["dt_txt",{"_index":344,"title":{},"body":{"index.html":{}}}],["durante",{"_index":315,"title":{},"body":{"index.html":{}}}],["dutch",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["día",{"_index":257,"title":{},"body":{"index.html":{}}}],["días",{"_index":312,"title":{},"body":{"index.html":{}}}],["e",{"_index":175,"title":{},"body":{"classes/ApiService.html":{}}}],["e.data",{"_index":178,"title":{},"body":{"classes/ApiService.html":{}}}],["ejecutar",{"_index":228,"title":{},"body":{"index.html":{}}}],["el",{"_index":54,"title":{},"body":{"classes/ApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":77,"title":{},"body":{"classes/ApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["encuentran",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["english",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":180,"title":{},"body":{"classes/ApiService.html":{}}}],["es",{"_index":20,"title":{},"body":{"classes/ApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["espera",{"_index":261,"title":{},"body":{"index.html":{}}}],["esta",{"_index":131,"title":{},"body":{"classes/ApiService.html":{}}}],["estas",{"_index":236,"title":{},"body":{"index.html":{}}}],["este",{"_index":229,"title":{},"body":{"index.html":{}}}],["estilo",{"_index":263,"title":{},"body":{"index.html":{}}}],["event",{"_index":442,"title":{},"body":{"license.html":{}}}],["example",{"_index":11,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["export",{"_index":136,"title":{},"body":{"classes/ApiService.html":{}}}],["express",{"_index":433,"title":{},"body":{"license.html":{}}}],["fa",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":156,"title":{},"body":{"classes/ApiService.html":{}}}],["farsi",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feels_like",{"_index":279,"title":{},"body":{"index.html":{}}}],["fi",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{}}}],["files",{"_index":402,"title":{},"body":{"license.html":{}}}],["filter",{"_index":90,"title":{},"body":{"classes/ApiService.html":{}}}],["filtro",{"_index":91,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["finnish",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":438,"title":{},"body":{"license.html":{}}}],["fitro",{"_index":86,"title":{},"body":{"classes/ApiService.html":{}}}],["flag",{"_index":95,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["following",{"_index":422,"title":{},"body":{"license.html":{}}}],["forecast",{"_index":123,"title":{},"body":{"classes/ApiService.html":{}}}],["form",{"_index":254,"title":{},"body":{"index.html":{}}}],["fr",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":395,"title":{},"body":{"license.html":{}}}],["french",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["furnished",{"_index":420,"title":{},"body":{"license.html":{}}}],["galician",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["german",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":201,"title":{"index.html":{},"license.html":{}},"body":{}}],["gl",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":394,"title":{},"body":{"license.html":{}}}],["greek",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grnd_level",{"_index":332,"title":{},"body":{"index.html":{}}}],["hasta",{"_index":219,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":393,"title":{},"body":{"license.html":{}}}],["holders",{"_index":444,"title":{},"body":{"license.html":{}}}],["horas",{"_index":318,"title":{},"body":{"index.html":{}}}],["hr",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://api.openweathermap.org",{"_index":248,"title":{},"body":{"index.html":{}}}],["http://api.openweathermap.org/data/2.5",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hu",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["humidity",{"_index":287,"title":{},"body":{"index.html":{}}}],["hungarian",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":273,"title":{},"body":{"index.html":{}}}],["id",{"_index":267,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":63,"title":{},"body":{"classes/ApiService.html":{}}}],["implements",{"_index":135,"title":{},"body":{"classes/ApiService.html":{}}}],["implied",{"_index":434,"title":{},"body":{"license.html":{}}}],["import",{"_index":119,"title":{},"body":{"classes/ApiService.html":{}}}],["included",{"_index":427,"title":{},"body":{"license.html":{}}}],["including",{"_index":406,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"classes/ApiService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiService.html":{}}}],["inicializa",{"_index":53,"title":{},"body":{"classes/ApiService.html":{}}}],["inicializar",{"_index":75,"title":{},"body":{"classes/ApiService.html":{}}}],["instalación",{"_index":227,"title":{},"body":{"index.html":{}}}],["install",{"_index":232,"title":{},"body":{"index.html":{}}}],["instrucciones",{"_index":237,"title":{},"body":{"index.html":{}}}],["interfaces/api.interface",{"_index":129,"title":{},"body":{"classes/ApiService.html":{}}}],["italian",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ja",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["japanese",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["keys",{"_index":220,"title":{},"body":{"index.html":{}}}],["kind",{"_index":432,"title":{},"body":{"license.html":{}}}],["korean",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kr",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l.code",{"_index":145,"title":{},"body":{"classes/ApiService.html":{}}}],["la",{"_index":10,"title":{},"body":{"classes/ApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":40,"title":{},"body":{"classes/ApiService.html":{}}}],["lang).length",{"_index":146,"title":{},"body":{"classes/ApiService.html":{}}}],["lang=${lang",{"_index":149,"title":{},"body":{"classes/ApiService.html":{}}}],["lang=es",{"_index":150,"title":{},"body":{"classes/ApiService.html":{}}}],["langcodes",{"_index":125,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["langcodes.filter(l",{"_index":144,"title":{},"body":{"classes/ApiService.html":{}}}],["las",{"_index":243,"title":{},"body":{"index.html":{}}}],["lat",{"_index":25,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["lat=${location.lat}&lon=${location.lon",{"_index":164,"title":{},"body":{"classes/ApiService.html":{}}}],["latvian",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":448,"title":{},"body":{"license.html":{}}}],["liable",{"_index":445,"title":{},"body":{"license.html":{}}}],["lib",{"_index":251,"title":{},"body":{"index.html":{}}}],["lib.apiservice",{"_index":258,"title":{},"body":{"index.html":{}}}],["lib/.../constants.ts",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../lang",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/constants/constants.ts",{"_index":188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/constants/lang",{"_index":192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/services/api.services.ts",{"_index":6,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{}}}],["lib/services/api.services.ts:111",{"_index":97,"title":{},"body":{"classes/ApiService.html":{}}}],["lib/services/api.services.ts:129",{"_index":115,"title":{},"body":{"classes/ApiService.html":{}}}],["lib/services/api.services.ts:146",{"_index":83,"title":{},"body":{"classes/ApiService.html":{}}}],["lib/services/api.services.ts:42",{"_index":68,"title":{},"body":{"classes/ApiService.html":{}}}],["lib/services/api.services.ts:44",{"_index":82,"title":{},"body":{"classes/ApiService.html":{}}}],["lib/services/api.services.ts:46",{"_index":51,"title":{},"body":{"classes/ApiService.html":{}}}],["lib/services/api.services.ts:67",{"_index":71,"title":{},"body":{"classes/ApiService.html":{}}}],["lib/services/api.services.ts:79",{"_index":76,"title":{},"body":{"classes/ApiService.html":{}}}],["lib/services/api.services.ts:94",{"_index":109,"title":{},"body":{"classes/ApiService.html":{}}}],["librería",{"_index":203,"title":{},"body":{"index.html":{}}}],["license",{"_index":387,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":407,"title":{},"body":{"license.html":{}}}],["limited",{"_index":435,"title":{},"body":{"license.html":{}}}],["list",{"_index":31,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["list.foreach(e",{"_index":33,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["lithuanian",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["llama",{"_index":84,"title":{},"body":{"classes/ApiService.html":{}}}],["llamada",{"_index":170,"title":{},"body":{"classes/ApiService.html":{}}}],["localización",{"_index":102,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["location",{"_index":103,"title":{},"body":{"classes/ApiService.html":{}}}],["lon",{"_index":27,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["los",{"_index":66,"title":{},"body":{"classes/ApiService.html":{},"miscellaneous/variables.html":{}}}],["lt",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["luego",{"_index":217,"title":{},"body":{"index.html":{}}}],["lugar",{"_index":105,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["lugares",{"_index":134,"title":{},"body":{"classes/ApiService.html":{}}}],["m",{"_index":13,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["m('your",{"_index":18,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["macedonian",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":269,"title":{},"body":{"index.html":{}}}],["matching",{"_index":182,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mediante",{"_index":101,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["medira",{"_index":79,"title":{},"body":{"classes/ApiService.html":{}}}],["merchantability",{"_index":437,"title":{},"body":{"license.html":{}}}],["merge",{"_index":411,"title":{},"body":{"license.html":{}}}],["message",{"_index":323,"title":{},"body":{"index.html":{}}}],["metric",{"_index":139,"title":{},"body":{"classes/ApiService.html":{}}}],["miscellaneous",{"_index":460,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":388,"title":{},"body":{"index.html":{},"license.html":{}}}],["mk",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":410,"title":{},"body":{"license.html":{}}}],["modo",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module.exports",{"_index":245,"title":{},"body":{"index.html":{}}}],["modules",{"_index":458,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moreno",{"_index":385,"title":{},"body":{"index.html":{}}}],["método",{"_index":72,"title":{},"body":{"classes/ApiService.html":{}}}],["métrica",{"_index":65,"title":{},"body":{"classes/ApiService.html":{}}}],["n",{"_index":374,"title":{},"body":{"index.html":{}}}],["name",{"_index":56,"title":{},"body":{"classes/ApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":17,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{},"index.html":{}}}],["nl",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nombre",{"_index":111,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["noninfringement",{"_index":441,"title":{},"body":{"license.html":{}}}],["nota",{"_index":210,"title":{},"body":{"index.html":{}}}],["notice",{"_index":425,"title":{},"body":{"license.html":{}}}],["npm",{"_index":231,"title":{},"body":{"index.html":{}}}],["nubes",{"_index":271,"title":{},"body":{"index.html":{}}}],["null",{"_index":162,"title":{},"body":{"classes/ApiService.html":{}}}],["object",{"_index":161,"title":{},"body":{"classes/ApiService.html":{}}}],["objetos",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":398,"title":{},"body":{"license.html":{}}}],["obtener",{"_index":98,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["obtiene",{"_index":204,"title":{},"body":{"index.html":{}}}],["opciones",{"_index":209,"title":{},"body":{"index.html":{}}}],["openweather",{"_index":214,"title":{},"body":{"index.html":{}}}],["openweathermap",{"_index":60,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["optional",{"_index":58,"title":{},"body":{"classes/ApiService.html":{}}}],["otherwise",{"_index":453,"title":{},"body":{"license.html":{}}}],["out",{"_index":455,"title":{},"body":{"license.html":{}}}],["overview",{"_index":459,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ow",{"_index":233,"title":{},"body":{"index.html":{}}}],["package",{"_index":198,"title":{"dependencies.html":{}},"body":{}}],["para",{"_index":74,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["param",{"_index":138,"title":{},"body":{"classes/ApiService.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"classes/ApiService.html":{}}}],["params",{"_index":168,"title":{},"body":{"classes/ApiService.html":{}}}],["particular",{"_index":439,"title":{},"body":{"license.html":{}}}],["parámetro",{"_index":322,"title":{},"body":{"index.html":{}}}],["país",{"_index":113,"title":{},"body":{"classes/ApiService.html":{}}}],["países",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pegarla",{"_index":226,"title":{},"body":{"index.html":{}}}],["permission",{"_index":392,"title":{},"body":{"license.html":{}}}],["permit",{"_index":418,"title":{},"body":{"license.html":{}}}],["persian",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":397,"title":{},"body":{"license.html":{}}}],["persons",{"_index":419,"title":{},"body":{"license.html":{}}}],["pl",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pod",{"_index":342,"title":{},"body":{"index.html":{}}}],["polish",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poner",{"_index":239,"title":{},"body":{"index.html":{}}}],["pop",{"_index":341,"title":{},"body":{"index.html":{}}}],["population",{"_index":379,"title":{},"body":{"index.html":{}}}],["por",{"_index":87,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["portions",{"_index":429,"title":{},"body":{"license.html":{}}}],["portuguese",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postal",{"_index":116,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["pressure",{"_index":285,"title":{},"body":{"index.html":{}}}],["previsión",{"_index":96,"title":{},"body":{"classes/ApiService.html":{}}}],["primero",{"_index":211,"title":{},"body":{"index.html":{}}}],["privado",{"_index":73,"title":{},"body":{"classes/ApiService.html":{}}}],["private",{"_index":37,"title":{},"body":{"classes/ApiService.html":{}}}],["promise",{"_index":155,"title":{},"body":{"classes/ApiService.html":{}}}],["pronostico",{"_index":133,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["pronóstico",{"_index":314,"title":{},"body":{"index.html":{}}}],["properties",{"_index":36,"title":{},"body":{"classes/ApiService.html":{}}}],["provided",{"_index":430,"title":{},"body":{"license.html":{}}}],["pruebas",{"_index":244,"title":{},"body":{"index.html":{}}}],["pt",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":42,"title":{},"body":{"classes/ApiService.html":{}}}],["publish",{"_index":412,"title":{},"body":{"license.html":{}}}],["puede",{"_index":313,"title":{},"body":{"index.html":{}}}],["pueden",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":440,"title":{},"body":{"license.html":{}}}],["q=${name",{"_index":157,"title":{},"body":{"classes/ApiService.html":{}}}],["q=${name},${codcountry",{"_index":158,"title":{},"body":{"classes/ApiService.html":{}}}],["que",{"_index":52,"title":{},"body":{"classes/ApiService.html":{},"miscellaneous/variables.html":{}}}],["quiere",{"_index":92,"title":{},"body":{"classes/ApiService.html":{}}}],["registrarte",{"_index":213,"title":{},"body":{"index.html":{}}}],["requestapi",{"_index":41,"title":{},"body":{"classes/ApiService.html":{}}}],["require('./dist').apiservice",{"_index":15,"title":{},"body":{"classes/ApiService.html":{}}}],["require('openweather",{"_index":252,"title":{},"body":{"index.html":{}}}],["respuesta",{"_index":205,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":405,"title":{},"body":{"license.html":{}}}],["result",{"_index":181,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":183,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":159,"title":{},"body":{"classes/ApiService.html":{}}}],["returns",{"_index":154,"title":{},"body":{"classes/ApiService.html":{}}}],["rights",{"_index":408,"title":{},"body":{"license.html":{}}}],["ro",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["romanian",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ru",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["russian",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saavedra",{"_index":386,"title":{},"body":{"index.html":{}}}],["scattered",{"_index":337,"title":{},"body":{"index.html":{}}}],["se",{"_index":78,"title":{},"body":{"classes/ApiService.html":{},"miscellaneous/variables.html":{}}}],["sea_level",{"_index":331,"title":{},"body":{"index.html":{}}}],["searchbygeolocationgeographic",{"_index":43,"title":{},"body":{"classes/ApiService.html":{}}}],["searchbyname",{"_index":44,"title":{},"body":{"classes/ApiService.html":{}}}],["searchbyname('barcelona",{"_index":114,"title":{},"body":{"classes/ApiService.html":{}}}],["searchzippostcode",{"_index":45,"title":{},"body":{"classes/ApiService.html":{}}}],["searchzippostcode('08080",{"_index":118,"title":{},"body":{"classes/ApiService.html":{}}}],["sebastián",{"_index":384,"title":{},"body":{"index.html":{}}}],["seguir",{"_index":235,"title":{},"body":{"index.html":{}}}],["sell",{"_index":416,"title":{},"body":{"license.html":{}}}],["shall",{"_index":426,"title":{},"body":{"license.html":{}}}],["simplified",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sk",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sl",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slovak",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slovenian",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":400,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiService.html":{}}}],["spanish",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":292,"title":{},"body":{"index.html":{}}}],["started",{"_index":202,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["stations",{"_index":276,"title":{},"body":{"index.html":{}}}],["string",{"_index":49,"title":{},"body":{"classes/ApiService.html":{},"miscellaneous/variables.html":{}}}],["su",{"_index":223,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":421,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":414,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":428,"title":{},"body":{"license.html":{}}}],["sunrise",{"_index":302,"title":{},"body":{"index.html":{}}}],["sunset",{"_index":304,"title":{},"body":{"index.html":{}}}],["swedish",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys",{"_index":299,"title":{},"body":{"index.html":{}}}],["table",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":277,"title":{},"body":{"index.html":{}}}],["temp_kf",{"_index":335,"title":{},"body":{"index.html":{}}}],["temp_max",{"_index":283,"title":{},"body":{"index.html":{}}}],["temp_min",{"_index":281,"title":{},"body":{"index.html":{}}}],["test/constants.js",{"_index":242,"title":{},"body":{"index.html":{}}}],["then(data",{"_index":22,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["this.apikey",{"_index":140,"title":{},"body":{"classes/ApiService.html":{}}}],["this.configlanguage(lang",{"_index":141,"title":{},"body":{"classes/ApiService.html":{}}}],["this.configunits(units",{"_index":142,"title":{},"body":{"classes/ApiService.html":{}}}],["this.lang",{"_index":148,"title":{},"body":{"classes/ApiService.html":{}}}],["this.requestapi(filter",{"_index":160,"title":{},"body":{"classes/ApiService.html":{}}}],["this.units",{"_index":151,"title":{},"body":{"classes/ApiService.html":{}}}],["this.units}${this.lang}&appid=${this.apikey",{"_index":169,"title":{},"body":{"classes/ApiService.html":{}}}],["tiempo",{"_index":99,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["timezone",{"_index":306,"title":{},"body":{"index.html":{}}}],["tort",{"_index":452,"title":{},"body":{"license.html":{}}}],["tr",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["traditional",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":30,"title":{},"body":{"classes/ApiService.html":{},"index.html":{}}}],["try",{"_index":174,"title":{},"body":{"classes/ApiService.html":{}}}],["tu",{"_index":240,"title":{},"body":{"index.html":{}}}],["turkish",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":57,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ua",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ukrainian",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ultimo",{"_index":321,"title":{},"body":{"index.html":{}}}],["un",{"_index":206,"title":{},"body":{"index.html":{}}}],["una",{"_index":262,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":81,"title":{},"body":{"classes/ApiService.html":{}}}],["unidad",{"_index":64,"title":{},"body":{"classes/ApiService.html":{}}}],["unit",{"_index":80,"title":{},"body":{"classes/ApiService.html":{}}}],["units",{"_index":46,"title":{},"body":{"classes/ApiService.html":{}}}],["units=metric",{"_index":152,"title":{},"body":{"classes/ApiService.html":{}}}],["url",{"_index":171,"title":{},"body":{"classes/ApiService.html":{},"miscellaneous/variables.html":{}}}],["url_localhost",{"_index":121,"title":{},"body":{"classes/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url_localhost}${current}${filter}${params",{"_index":173,"title":{},"body":{"classes/ApiService.html":{}}}],["url_localhost}${forecast}${filter}${params",{"_index":172,"title":{},"body":{"classes/ApiService.html":{}}}],["usando",{"_index":207,"title":{},"body":{"index.html":{}}}],["usar",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":409,"title":{},"body":{"license.html":{}}}],["uso",{"_index":238,"title":{},"body":{"index.html":{}}}],["value",{"_index":70,"title":{},"body":{"classes/ApiService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":461,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vi",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vietnamese",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visibility",{"_index":289,"title":{},"body":{"index.html":{}}}],["void",{"_index":143,"title":{},"body":{"classes/ApiService.html":{}}}],["warranties",{"_index":436,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":431,"title":{},"body":{"license.html":{}}}],["weather",{"_index":266,"title":{},"body":{"index.html":{}}}],["whether",{"_index":449,"title":{},"body":{"license.html":{}}}],["wind",{"_index":291,"title":{},"body":{"index.html":{}}}],["without",{"_index":404,"title":{},"body":{"license.html":{}}}],["y",{"_index":222,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["zh_cn",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zh_tw",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zip=${cp",{"_index":165,"title":{},"body":{"classes/ApiService.html":{}}}],["zip=${cp},${codcountry",{"_index":166,"title":{},"body":{"classes/ApiService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiService.html":{"url":"classes/ApiService.html","title":"class - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/services/api.services.ts\n        \n\n            \n                Description\n            \n            \n                Clase de la Apiservice. \n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            const m = require('./dist').ApiService;\nconst api = new m('your-apiKey', 'es', 'm');\napi.searchByName('Barcelona', 'es')\n.then(data => console.log(data));\n\napi.searchByGeolocationGeographic({ lat: -33.8473567, lon: 150.6517943 })\n.then(data => console.log(data));\n\napi.searchZipPostcode('08080', 'es')\n.then(data => console.log(data));\n\napi.searchZipPostcode('08080', 'es', true)\n.then(data => {\nconst { list } = data;\n// example\nlist.forEach(e => {\nconsole.log(e);\n});\n});\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                APIKEY\n                            \n                            \n                                    Private\n                                configLanguage\n                            \n                            \n                                    Private\n                                configUnits\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                    Private\n                                requestApi\n                            \n                            \n                                    Public\n                                searchByGeolocationGeographic\n                            \n                            \n                                    Public\n                                searchByName\n                            \n                            \n                                    Public\n                                searchZipPostcode\n                            \n                            \n                                    Private\n                                units\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(APIKEY: string, lang: string, units: string)\n                    \n                \n                        \n                            \n                                Defined in lib/services/api.services.ts:46\n                            \n                        \n\n                \n                    \n                            Constructor que inicializa el ApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        APIKEY\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Key de la api de Openweathermap.\n\n                                                        \n                                                \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Código del idioma.\n\n                                                        \n                                                \n                                                \n                                                        units\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unidad métrica de los datos.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            APIKEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:67\n                            \n                        \n\n                \n                    \n                        Método privado para inicializar el código del idioma.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        lang\n                                                        \n                                                                Código del idioma.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUnits\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:79\n                            \n                        \n\n                \n                    \n                        Método privado para inicializar la unidad métrica en la que se medira los datos.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        unit\n                                                        \n                                                                Métrica de los datos.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:146\n                            \n                        \n\n                \n                    \n                        Método privado que llama a la api con el fitro por el que se desea buscar.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        filter\n                                                        \n                                                                filtro por el que se quiere busca.\n\n                                                        \n                                                \n                                                \n                                                        anticipation\n                                                        \n                                                                Flag de previsión.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchByGeolocationGeographic\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:111\n                            \n                        \n\n                \n                    \n                        Método para obtener el tiempo actual mediante la localización.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        location\n                                                        \n                                                                Coordenadas del lugar por el que se quiere buscar.\n\n                                                        \n                                                \n                                                \n                                                        anticipation\n                                                        \n                                                                Flag de previsión.\n\n                                                        \n                                                \n                                      \n                                  \n                                  Example :\n                                      \n                                          searchByGeolocationGeographic({ lat: 43.2633534, lon: -2.951074 }); || searchByGeolocationGeographic({ lat: 43.2633534, lon: -2.951074 }, 5);\n\n                                      \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchByName\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:94\n                            \n                        \n\n                \n                    \n                        Método para obtener el tiempo actual buscando mediante el nombre del lugar.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        name\n                                                        \n                                                                nombre del lugar.\n\n                                                        \n                                                \n                                                \n                                                        codCountry\n                                                        \n                                                                Código del país.\n\n                                                        \n                                                \n                                                \n                                                        anticipation\n                                                        \n                                                                Flag de previsión.\n\n                                                        \n                                                \n                                      \n                                  \n                                  Example :\n                                      \n                                          searchByName('Barcelona', 'es'); || searchByName('Barcelona', 'es', 5);\n\n                                      \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchZipPostcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:129\n                            \n                        \n\n                \n                    \n                        Método para obtener el tiempo actual mediante el código postal del lugar.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        cp\n                                                        \n                                                                Código postal del lugar.\n\n                                                        \n                                                \n                                                \n                                                        codCountry\n                                                        \n                                                                Código del país del lugar.\n\n                                                        \n                                                \n                                                \n                                                        anticipation\n                                                        \n                                                                Flag de previsión.\n\n                                                        \n                                                \n                                      \n                                  \n                                  Example :\n                                      \n                                          searchZipPostcode('08080', 'es'); || searchZipPostcode('08080', 'es', 5);\n\n                                      \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            units\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/services/api.services.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import axios from 'axios';\nimport { URL_LOCALHOST, CURRENT, FORECAST } from '../constants/constants';\nimport { LANGCODES } from '../constants/lang-codes';\nimport { Coord } from '../interfaces/api.interface';\n\n/**\n * Clase de la Apiservice. \n * @class ApiService.\n * @classdesc Esta clase llama a la api de openweathermap para consumir el pronostico del tiempo de lugares.\n * @implements URL_LOCALHOST, CURRENT, FORECAST\n * @example\n * const m = require('./dist').ApiService;\n * const api = new m('your-apiKey', 'es', 'm');\n * api.searchByName('Barcelona', 'es')\n *      .then(data => console.log(data));\n * \n * api.searchByGeolocationGeographic({ lat: -33.8473567, lon: 150.6517943 })\n *      .then(data => console.log(data));\n *\n * api.searchZipPostcode('08080', 'es')\n *      .then(data => console.log(data));\n *\n * api.searchZipPostcode('08080', 'es', true)\n *      .then(data => {\n *          const { list } = data;\n *          // example\n *          list.forEach(e => {\n *          console.log(e);\n *      });\n * });\n * \n */\nexport class ApiService {\n\n    /** @access private */\n    private APIKEY: string;\n    /** @access private */\n    private lang: string | undefined;\n    /** @access private */\n    private units: string | undefined;\n\n    /**\n     * Constructor que inicializa el ApiService.\n     * @constructor\n     * @param APIKEY {string} Key de la api de Openweathermap.\n     * @param lang {string} Código del idioma.\n     * @param units {string} Unidad métrica de los datos.\n     */\n    public constructor(APIKEY: string, lang: string = 'es', units: string = 'metric') {\n        this.APIKEY = APIKEY;\n        this.configLanguage(lang);\n        this.configUnits(units);\n    };\n\n    /**\n     * Método privado para inicializar el código del idioma.\n     * @private\n     * @access private\n     * @param lang {string} Código del idioma.\n     */\n    private configLanguage = (lang: string): void => {\n        (LANGCODES.filter(l => l.code === lang).length === 1)\n            ? this.lang = `&lang=${lang}`\n            : this.lang = '&lang=es';\n    };\n\n    /**\n     * Método privado para inicializar la unidad métrica en la que se medira los datos.\n     * @private\n     * @access private\n     * @param unit {string} Métrica de los datos.\n     */\n    private configUnits = (unit: string): void => {\n        this.units = (unit === 'm' || unit === 'metric') ? '&units=metric' : '';\n    };\n\n    /**\n     * Método para obtener el tiempo actual buscando mediante el nombre del lugar.\n     * @public\n     * @param name {string} nombre del lugar.\n     * @param codCountry {string} Código del país.\n     * @param anticipation {boolean} Flag de previsión.\n     * @example\n     * searchByName('Barcelona', 'es'); || searchByName('Barcelona', 'es', 5);\n     * @returns\n     * Promise\n     */\n    public searchByName = (name: string, codCountry: string = '', anticipation: boolean = false): Promise => {\n\n        const filter: string = (codCountry === '') ? `q=${name}` : `q=${name},${codCountry}`;\n        return this.requestApi(filter, anticipation);\n\n    };\n\n    /**\n     * Método para obtener el tiempo actual mediante la localización.\n     * @public\n     * @param location {Object} Coordenadas del lugar por el que se quiere buscar.\n     * @param anticipation {boolean} Flag de previsión.\n     * @example\n     * searchByGeolocationGeographic({ lat: 43.2633534, lon: -2.951074 }); || searchByGeolocationGeographic({ lat: 43.2633534, lon: -2.951074 }, 5);\n     * @returns\n     * Promise\n     */\n    public searchByGeolocationGeographic = (location: Coord, anticipation: boolean = false): Promise => {\n\n        const filter: string = (location === undefined || location === null) ? 'lat=-33.8473567&lon=150.651794' : `lat=${location.lat}&lon=${location.lon}`;\n        return this.requestApi(filter, anticipation);\n\n    };\n\n    /**\n     * Método para obtener el tiempo actual mediante el código postal del lugar.\n     * @public\n     * @param cp {string} Código postal del lugar.\n     * @param codCountry {string} Código del país del lugar.\n     * @param anticipation {boolean} Flag de previsión.\n     * @example\n     * searchZipPostcode('08080', 'es'); || searchZipPostcode('08080', 'es', 5);\n     * @returns\n     * Promise\n     */\n    public searchZipPostcode = (cp: string, codCountry: string = '', anticipation: boolean = false): Promise => {\n\n        const filter: string = (codCountry === '') ? `zip=${cp}` : `zip=${cp},${codCountry}`;\n        return this.requestApi(filter, anticipation);\n\n    };\n\n    /**\n     * Método privado que llama a la api con el fitro por el que se desea buscar.\n     * @private\n     * @access private\n     * @async\n     * @param filter {string} filtro por el que se quiere busca.\n     * @param anticipation {boolean} Flag de previsión.\n     * @returns\n     * Promise\n     */\n    private requestApi = async (filter: string, anticipation: boolean): Promise => {\n\n        const params: string = `${this.units}${this.lang}&appid=${this.APIKEY}`;\n\n        // Llamada a la API\n        const url: string = (anticipation) ? `${URL_LOCALHOST}${FORECAST}${filter}${params}` : `${URL_LOCALHOST}${CURRENT}${filter}${params}`;\n\n        try {\n            const e = await axios.get(url);\n            return e.data;\n        } catch (error) {\n            return error;\n        }\n\n    };\n\n};\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/constants/constants.ts\n            \n            variable\n            URL_LOCALHOST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/constants/lang-codes.ts\n            \n            variable\n            LANGCODES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/services/api.services.ts\n            \n            class\n            ApiService\n            \n                72 %\n                (8/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            axios : ^0.21.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenweathermap api librería\nObtiene la respuesta del tiempo actual de un lugar usando diferentes opciones de filtro.\nNota\nPrimero debes registrarte en openweather dede aquí OpenWeather, luego dirigirse hasta aquí API keys para crear y obtener su key, después copiar la key y pegarla en your-apiKey.\nInstalación\nEjecutar este comando\nnpm install api-ow-chaningUso\nSeguir estas instrucciones de uso\nPoner la API key de Openweathermap\nPoner tu key en el archivo test/constants.js en your-apiKey para ejecutar las pruebas.\nmodule.exports = {\n    API_KEY: 'your-apiKey',\n    API_URL: 'http://api.openweathermap.org'\n};Como añadirlo\nconst lib = require('openweather-api-chaning');import lib form 'openweather-api-chaning';Para obtener el pronostico del tiempo, por defecto un día\n\nObtener el tiempo actual buscando mediante el nombre del lugar\n\nconst m = lib.ApiService;\n\nconst api = new m('your-apiKey', 'es', 'm');\n\napi.searchByName('Barcelona', 'es')\n    .then(data => console.log(data))\n    .catch(error => console.log(error));\nObtener el tiempo actual mediante la localización\n\nconst m = lib.ApiService;\n\nconst api = new m('your-apiKey', 'es', 'm');\n\napi.searchByGeolocationGeographic({ lat: 43.2633534, lon: -2.951074 })\n    .then(data => console.log(data))\n    .catch(error => console.log(error));\nObtener el tiempo actual mediante el código postal del lugar\n\nconst m = lib.ApiService;\n\nconst api = new m('your-apiKey', 'es', 'm');\n\napi.searchZipPostcode('08080', 'es')\n    .then(data => console.log(data))\n    .catch(error => console.log(error));// Espera una respuesta de este estilo:\n{\n    coord: { lon: 2.16, lat: 41.39 },\n    weather: [\n        {\n            id: 802,\n            main: 'Clouds',\n            description: 'nubes dispersas',\n            icon: '03d'\n        }\n    ],\n    base: 'stations',\n    main: {\n        temp: 10.39,\n        feels_like: 5.25,\n        temp_min: 8.89,\n        temp_max: 11.67,\n        pressure: 999,\n        humidity: 50\n    },\n    visibility: 10000,\n    wind: { speed: 4.6, deg: 320 },\n    clouds: { all: 40 },\n    dt: 1607173717,\n    sys: {\n        type: 1,\n        id: 6398,\n        country: 'ES',\n        sunrise: 1607151749,\n        sunset: 1607185327\n    },\n    timezone: 3600,\n    id: 3128760,\n    name: 'Barcelona',\n    cod: 200\n}Para obtener el pronostico del tiempo de 5 días\nPuede buscar el pronóstico del tiempo durante 5 días con datos cada 3 horas por nombre de ciudad añadiendo el flag true como ultimo parámetro.\n\nObtener el tiempo actual buscando mediante el nombre del lugar\n\nconst m = lib.ApiService;\n\nconst api = new m('your-apiKey', 'es', 'm');\n\napi.searchByName('Barcelona', 'es', true)\n    .then(data => {\n\n        const { list } = data;\n        // example\n        list.forEach(e => {\n            console.log(e);\n        });\n\n    })\n    .catch(error => console.log(error));\nObtener el tiempo actual mediante la localización\n\nconst m = lib.ApiService;\n\nconst api = new m('your-apiKey', 'es', 'm');\n\napi.searchByGeolocationGeographic({ lat: 43.2633534, lon: -2.951074 }, true)\n    .then(data => {\n\n        const { list } = data;\n        // example\n        list.forEach(e => {\n            console.log(e);\n        });\n\n    })\n    .catch(error => console.log(error));\nObtener el tiempo actual mediante el código postal del lugar\n\nconst m = lib.ApiService;\n\nconst api = new m('your-apiKey', 'es', 'm');\n\napi.searchZipPostcode('08080', 'es', true)\n    .then(data => {\n\n        const { list } = data;\n        // example\n        list.forEach(e => {\n            console.log(e);\n        });\n\n    })\n    .catch(error => console.log(error));// Espera una respuesta de este estilo:\n{\n    cod: \"200\",\n    message: 0,\n    cnt: 40,\n    list: [\n        {\n            dt: 1607256000,\n            main: {\n                temp: 282.82,\n                feels_like: 277.43,\n                temp_min: 282.82,\n                temp_max: 283.91,\n                pressure: 1003,\n                sea_level: 1003,\n                grnd_level: 996,\n                humidity: 62,\n                temp_kf: -1.09\n            },\n            weather: [\n                {\n                    id: 802,\n                    main: \"Clouds\",\n                    description: \"scattered clouds\",\n                    icon: \"03d\"\n                }\n            ],\n            clouds: {\n                all: 31\n            },\n            wind: {\n                speed: 5.49,\n                deg: 291\n            },\n            visibility: 10000,\n            pop: 0,\n            sys: {\n                pod: \"d\"\n            },\n            dt_txt: \"2020-12-06 12:00:00\"\n        },\n        {\n            dt: 1607266800,\n            main: {\n                temp: 284.14,\n                feels_like: 278.5,\n                temp_min: 284.14,\n                temp_max: 284.79,\n                pressure: 1002,\n                sea_level: 1002,\n                grnd_level: 996,\n                humidity: 57,\n                temp_kf: -0.65\n            },\n            weather: [\n                {\n                    id: 803,\n                    main: \"Clouds\",\n                    description: \"broken clouds\",\n                    icon: \"04d\"\n                }\n            ],\n            clouds: {\n                all: 64\n            },\n            wind: {\n                speed: 5.86,\n                deg: 286\n            },\n            visibility: 10000,\n            pop: 0,\n            sys: {\n                pod: \"d\"\n            },\n            dt_txt: \"2020-12-06 15:00:00\"\n        },\n        {\n            dt: 1607277600,\n            main: {\n                temp: 283.32,\n                feels_like: 278.46,\n                temp_min: 283.32,\n                temp_max: 283.42,\n                pressure: 1003,\n                sea_level: 1003,\n                grnd_level: 997,\n                humidity: 59,\n                temp_kf: -0.1\n            },\n            weather: [\n                {\n                    id: 802,\n                    main: \"Clouds\",\n                    description: \"scattered clouds\",\n                    icon: \"03n\"\n                }\n            ],\n            clouds: {\n                all: 46\n            },\n            wind: {\n                speed: 4.68,\n                deg: 305\n            },\n            visibility: 10000,\n            pop: 0,\n            sys: {\n                pod: \"n\"\n            },\n            dt_txt: \"2020-12-06 18:00:00\"\n        },\n        ....\n\n    ],\n    city: {\n        id: 3128760,\n            name: \"Barcelona\",\n            coord: {\n            lat: 41.3888,\n            lon: 2.159\n        },\n        country: \"ES\",\n        population: 1621537,\n        timezone: 3600,\n        sunrise: 1607238205,\n        sunset: 1607271721\n    }\n}Autor\nEl autor es Sebastián Moreno Saavedra\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Chano\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LANGCODES   (lib/.../lang-codes.ts)\n                        \n                        \n                            URL_LOCALHOST   (lib/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/constants/lang-codes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LANGCODES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { 'name': 'Arabic', 'code': 'ar' },\n    { 'name': 'Bulgarian', 'code': 'bg' },\n    { 'name': 'Catalan', 'code': 'ca' },\n    { 'name': 'Czech', 'code': 'cz' },\n    { 'name': 'German', 'code': 'de' },\n    { 'name': 'Greek', 'code': 'el' },\n    { 'name': 'English', 'code': 'en' },\n    { 'name': 'Persian (Farsi)', 'code': 'fa' },\n    { 'name': 'Finnish', 'code': 'fi' },\n    { 'name': 'French', 'code': 'fr' },\n    { 'name': 'Galician', 'code': 'gl' },\n    { 'name': 'Croatian', 'code': 'hr' },\n    { 'name': 'Hungarian', 'code': 'hu' },\n    { 'name': 'Italian', 'code': 'it' },\n    { 'name': 'Japanese', 'code': 'ja' },\n    { 'name': 'Korean', 'code': 'kr' },\n    { 'name': 'Latvian', 'code': 'la' },\n    { 'name': 'Lithuanian', 'code': 'lt' },\n    { 'name': 'Macedonian', 'code': 'mk' },\n    { 'name': 'Dutch', 'code': 'nl' },\n    { 'name': 'Polish', 'code': 'pl' },\n    { 'name': 'Portuguese', 'code': 'pt' },\n    { 'name': 'Romanian', 'code': 'ro' },\n    { 'name': 'Russian', 'code': 'ru' },\n    { 'name': 'Swedish', 'code': 'se' },\n    { 'name': 'Slovak', 'code': 'sk' },\n    { 'name': 'Slovenian', 'code': 'sl' },\n    { 'name': 'Spanish', 'code': 'es' },\n    { 'name': 'Turkish', 'code': 'tr' },\n    { 'name': 'Ukrainian', 'code': 'ua' },\n    { 'name': 'Vietnamese', 'code': 'vi' },\n    { 'name': 'Chinese Simplified', 'code': 'zh_cn' },\n    { 'name': 'Chinese Traditional', 'code': 'zh_tw' }\n]\n                        \n                    \n\n                \n                    \n                        Array de objetos donde se encuentran los países que se pueden usar y su código.\n\n                    \n                \n\n            \n        \n\n    lib/constants/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            URL_LOCALHOST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://api.openweathermap.org/data/2.5/'\n                        \n                    \n\n                \n                    \n                        Constantes url y modo.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
